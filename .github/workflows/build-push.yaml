name: Build and Push Docker Image

on:
  push:
    branches: [main]

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
        - name:  Checkout Code
          uses: actions/checkout@v3

        - name: Set up QEMU
          uses: docker/setup-qemu-action@v2

          # Set up SSH for deployment
        - name: Install SSH Client
          run: sudo apt-get install -y openssh-client

        - name: Docker Setup
          uses: docker/setup-buildx-action@v2

        - name: SSH AGENT
          uses: webfactory/ssh-agent@v0.7.0
          with:
            ssh-private-key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}

        - name: Login to Digital Ocean Registry
          uses: docker/login-action@v2
          with:
            registry: registry.digitalocean.com
            username: ${{ secrets.DO_REGISTRY_USERNAME }}
            password: ${{ secrets.DO_REGISTRY_PASSWORD }}

        - name: Build and push
          uses: docker/build-push-action@v4
          with:
              context: .
              file: ./Dockerfile
              platforms: linux/amd64
              push: true
              tags: |
                registry.digitalocean.com/sellmedia/sell-crea8:v1
                registry.digitalocean.com/sellmedia/sell-crea8:latest
              build-args: |
                DATABASE_HOSTNAME=${{ secrets.DATABASE_HOSTNAME }}
                DATABASE_PORT=${{ secrets.DATABASE_PORT }}
                DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}
                DATABASE_NAME=${{ secrets.DATABASE_NAME }}
                DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}
                SECRET_KEY=${{ secrets.SECRET_KEY }}
                ADMIN_SECRET_KEY=${{ secrets.ADMIN_SECRET_KEY }}
                ALGORITHM=${{ secrets.ALGORITHM }}
                ACCESS_TOKEN_EXPIRATION_TIME=${{ secrets.ACCESS_TOKEN_EXPIRATION_TIME }}
                REFRESH_TOKEN_EXPIRATION_TIME=${{ secrets.REFRESH_TOKEN_EXPIRATION_TIME }}
                ADMIN_EMAIL=${{ secrets.ADMIN_EMAIL }}
                ADMIN_PASSWORD=${{ secrets.ADMIN_PASSWORD }}
                ELASTIC_SMTP_SENDER_EMAIL=${{ secrets.ELASTIC_SMTP_SENDER_EMAIL }}
                ELASTIC_SMTP_USERNAME=${{ secrets.ELASTIC_SMTP_USERNAME }}
                ELASTIC_SMTP_OUTGOING_SERVER_NAME=${{ secrets.ELASTIC_SMTP_OUTGOING_SERVER_NAME }}
                ELASTIC_SMTP_PASSWORD=${{ secrets.ELASTIC_SMTP_PASSWORD }}
                ELASTIC_SMTP_PORT_WITH_TLS=${{ secrets.ELASTIC_SMTP_PORT_WITH_TLS }}
                MAILTRAP_SMTP_SENDER_EMAIL=${{ secrets.MAILTRAP_SMTP_SENDER_EMAIL }}
                MAILTRAP_SMTP_USERNAME=${{ secrets.MAILTRAP_SMTP_USERNAME }}
                MAILTRAP_SMTP_OUTGOING_SERVER_NAME=${{ secrets.MAILTRAP_SMTP_OUTGOING_SERVER_NAME }}
                MAILTRAP_SMTP_PASSWORD=${{ secrets.MAILTRAP_SMTP_PASSWORD }}
                GOOGLE_CLIENT_ID=${{ secrets.GOOGLE_CLIENT_ID }}
                GOOGLE_CLIENT_SECRET=${{ secrets.GOOGLE_CLIENT_SECRET }}
                LINKEDIN_CLIENT_ID=${{ secrets.LINKEDIN_CLIENT_ID }}
                LINKEDIN_CLIENT_SECRET=${{ secrets.LINKEDIN_CLIENT_SECRET }}
                AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
                AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
                FLUTTERWAVE_LIVE_SECRET_KEY=${{ secrets.FLUTTERWAVE_LIVE_SECRET_KEY }}
                FLUTTERWAVE_SECRET_HASH=${{ secrets.FLUTTERWAVE_SECRET_HASH }}
            
  deploy-to-droplet:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:      
        - uses: appleboy/ssh-action@master
          with:
            host: ${{ secrets.DIGITALOCEAN_VM_IP }}
            port: 22
            username: ${{ secrets.SSH_USERNAME }}
            key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
            script: |
              docker pull registry.digitalocean.com/sellmedia/sell-crea8:latest
              docker-compose down
              docker-compose pull
              docker-compose up -d --build
        

