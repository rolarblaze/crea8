"""Alter users and profile tables

Revision ID: 107953cfa1a1
Revises: 59243dd27d3a
Create Date: 2024-08-02 03:47:21.799570

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '107953cfa1a1'
down_revision: Union[str, None] = '59243dd27d3a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Add user_email column to profiles table if it does not exist
    with op.batch_alter_table('profiles') as batch_op:
        batch_op.create_foreign_key('fk_profiles_user_email_users', 'users', ['user_email'], ['email'])
        batch_op.create_unique_constraint('uq_profiles_user_email', ['user_email'])

    # Drop profile_id foreign key from users table if it exists
    with op.batch_alter_table('users') as batch_op:
        batch_op.drop_constraint('users_profile_id_fkey', type_='foreignkey')
        batch_op.drop_column('profile_id')
    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    # Remove foreign key and unique constraint, and drop user_email column
    with op.batch_alter_table('profiles') as batch_op:
        batch_op.drop_constraint('fk_profiles_user_email_users', type_='foreignkey')
        batch_op.drop_constraint('uq_profiles_user_email', type_='unique')

    # Add profile_id back to users table if it existed before
    with op.batch_alter_table('users') as batch_op:
        batch_op.add_column(sa.Column('profile_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key('users_profile_id_fkey', 'profiles', ['profile_id'], ['profile_id'])
    # ### end Alembic commands ###
